#version 450

layout(binding = 0) uniform sampler2D screen;

layout(location = 0) out vec4 final_color;

/*
const int size = 20;
const float gauss_array[41] = { 0.002222, 0.003012, 0.00402, 0.005282, 0.006833, 0.008703, 0.010913, 0.013471, 0.016373, 0.019591, 0.023079, 0.026767, 0.030564, 0.034359, 0.038027, 0.041434, 0.044449, 0.046944, 0.048811, 0.049967, 0.050359, 0.049967, 0.048811, 0.046944, 0.044449, 0.041434, 0.038027, 0.034359, 0.030564, 0.026767, 0.023079, 0.019591, 0.016373, 0.013471, 0.010913, 0.008703, 0.006833, 0.005282, 0.00402, 0.003012, 0.002222 };
*/
const int size = 40;
const float gauss_array[81] = { 0.002821, 0.003114, 0.003429, 0.003766, 0.004125, 0.004508, 0.004914, 0.005343, 0.005795, 0.00627, 0.006767, 0.007285, 0.007822, 0.008379, 0.008953, 0.009542, 0.010145, 0.010758, 0.011381, 0.012009, 0.01264, 0.013272, 0.0139, 0.014521, 0.015133, 0.015731, 0.016311, 0.016871, 0.017406, 0.017914, 0.01839, 0.018832, 0.019237, 0.019601, 0.019922, 0.020197, 0.020426, 0.020605, 0.020734, 0.020812, 0.020838, 0.020812, 0.020734, 0.020605, 0.020426, 0.020197, 0.019922, 0.019601, 0.019237, 0.018832, 0.01839, 0.017914, 0.017406, 0.016871, 0.016311, 0.015731, 0.015133, 0.014521, 0.0139, 0.013272, 0.01264, 0.012009, 0.011381, 0.010758, 0.010145, 0.009542, 0.008953, 0.008379, 0.007822, 0.007285, 0.006767, 0.00627, 0.005795, 0.005343, 0.004914, 0.004508, 0.004125, 0.003766, 0.003429, 0.003114, 0.002821 };

vec3 blur(ivec2 coord) {
	vec3 result_blur = vec3(0.0);
	for (int x = -size; x <= size; ++x) {
		vec3 color = texelFetch(screen, ivec2(gl_FragCoord.x + x, gl_FragCoord.y), 0).rgb;
		result_blur += gauss_array[x + size] * color;
	}
	return result_blur;// / (size * 2 + 1);
}

void main() {
	final_color = vec4(blur(ivec2(gl_FragCoord.xy)), 1.0);
}
